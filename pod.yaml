apiVersion: v1
kind: Pod
metadata:
  name: discourse-kiss
spec:
  hostAliases:
  - { ip: 127.0.0.1, hostnames: [ sql, redis, app ] } 
  containers:
  - name: sql
    image: docker.io/library/postgres:12.4
    env:
    - name: POSTGRES_PASSWORD
      value: underpass
    - name: POSTGRES_USER
      value: discourse
    - name: POSTGRES_DB
      value: discourse
    volumeMounts:
    - mountPath: /var/lib/postgresql/data
      name: sql
  - name: redis
    image: docker.io/redis:6.0.6
  - name: nginx
    image: 0ex0/discourse-kiss
    args: [ "/usr/sbin/nginx", "-g", "daemon off;" ]
    ports:
    - containerPort: 80
      hostPort: 8014
      protocol: TCP
    volumeMounts:
    #- mountPath: /var/nginx/cache
    #  name: cache
    - mountPath: /etc/nginx/sites-enabled/default
      name: nginx.conf
    - mountPath: /shared
      name: data
  - name: app
    image: 0ex0/discourse-kiss
    ports:
    - containerPort: 3000
      hostPort: 8013
      protocol: TCP
    env:
    - name: RUBY_GLOBAL_METHOD_CACHE_SIZE
      value: "131072"
    - name: RAILS_ENV
      value: production
    - name: RUBY_GC_HEAP_GROWTH_MAX_SLOTS
      value: "40000"
    - name: UNICORN_WORKERS
      value: "3"
    - name: UNICORN_SIDEKIQS
      value: "1"
    - name: UNICORN_BIND_ALL
      value: "1"
    - name: RUBY_GC_HEAP_INIT_SLOTS
      value: "400000"
    - name: RUBY_GC_HEAP_OLDOBJECT_LIMIT_FACTOR
      value: "1.5"
    volumeMounts:
    - mountPath: /shared
      name: data
    - mountPath: /var/www/discourse/config/discourse.conf
      name: discourse.conf
  volumes:
  - name: data
    hostPath:
      path: ./data
  - name: sql
    hostPath:
      path: ./data/sql
  - name: discourse.conf
    hostPath:
      path: ./discourse.conf
  - name: nginx.conf
    hostPath:
      path: ./nginx.conf

